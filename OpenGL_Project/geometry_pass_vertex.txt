#version 330 core

// Vertex Attributes
layout(location = 0) in vec3 aPos;      // Vertex position
layout(location = 1) in vec3 aNormal;   // Vertex normal
layout(location = 2) in vec2 aTexCoords; // Vertex texture coordinates (optional)

// Output variables to Fragment Shader
out vec3 FragPos;   // Position of the fragment in world space
out vec3 Normal;    // Normal of the fragment in world space

// Uniforms
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{
    // Calculate world-space position of the fragment
    FragPos = vec3(model * vec4(aPos, 1.0));
    
    // Calculate world-space normal and normalize it
    Normal = mat3(transpose(inverse(model))) * aNormal;
    
    // Calculate clip-space position
    gl_Position = projection * view * vec4(FragPos, 1.0);
}
