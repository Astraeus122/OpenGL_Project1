#version 330 core
out vec4 FragColor;

in vec3 Normal;
in vec3 TexCoords3D;
in vec3 FragPos;

uniform sampler3D textureSampler;
uniform float timeOffset; // Uniform for the time-based offset
uniform bool isAnimated; // Flag to determine if the current texture is animated
uniform vec3 lightColor;
uniform vec3 lightPos;
uniform vec3 viewPos;
uniform vec3 ambientColor;

void main()
{
    vec3 texCoords = TexCoords3D;

    // Animation logic: modify the texture coordinates if isAnimated is true
    if (isAnimated) 
    {
        texCoords.z += timeOffset; // Modify the Z coordinate based on time for animation
    }

    // Texture color sampling
    vec4 texColor = texture(textureSampler, texCoords);

    // Ambient lighting
    vec3 ambient = ambientColor;

    // Diffuse lighting
    vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(lightPos - FragPos);
    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * lightColor;

    // Combine texture color with lighting
    vec3 result = (ambient + diffuse) * texColor.rgb;
    FragColor = vec4(result, 1.0);
}
