#version 330 core

in vec2 TexCoords; // Texture coordinates from vertex shader
out vec4 FragColor; // Output color

uniform sampler2D noiseTexture; // The Perlin noise texture

void main()
{
    float noiseValue = texture(noiseTexture, TexCoords).r; // Assuming the noise texture is grayscale

    // Define the gradient colors
    vec3 white = vec3(1.0, 1.0, 1.0);
    vec3 yellow = vec3(1.0, 1.0, 0.0);
    vec3 red = vec3(1.0, 0.0, 0.0);
    vec3 black = vec3(0.0, 0.0, 0.0);

    // Interpolate between colors based on noise value
    vec3 color;
    if (noiseValue < 0.25) 
    {
        color = mix(white, yellow, noiseValue / 0.25);
    } 
    else if (noiseValue < 0.5) 
    {
        color = mix(yellow, red, (noiseValue - 0.25) / 0.25);
    } 
    else if (noiseValue < 0.75) 
    {
        color = mix(red, black, (noiseValue - 0.5) / 0.25);
    } 
    else 
    {
        color = black; // Ensures that the highest values are black
    }

    FragColor = vec4(color, 1.0);
}
