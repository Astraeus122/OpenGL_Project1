#version 450 core
layout(quads, equal_spacing, cw) in;

uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;

uniform sampler2D heightmap;

out vec2 TexCoord;

void main()
{
    // Barycentric coordinates
    float u = gl_TessCoord.x;
    float v = gl_TessCoord.y;

    // Interpolate position in object/world space
    vec4 p0 = gl_in[0].gl_Position;
    vec4 p1 = gl_in[1].gl_Position;
    vec4 p2 = gl_in[2].gl_Position;
    vec4 p3 = gl_in[3].gl_Position;

    // Bilinear interpolation
    vec4 pos = mix(mix(p0, p1, u), mix(p3, p2, u), v);

    // Sample height from heightmap (assuming heightmap is normalized [0,1])
    float height = texture(heightmap, vec2((pos.x + 50.0) / 100.0, (pos.z + 50.0) / 100.0)).r;
    pos.y = height * 20.0; // Scale height

    // Apply transformation
    gl_Position = projection * view * model * pos;

    // Pass texture coordinates
    TexCoord = vec2((pos.x + 50.0) / 100.0, (pos.z + 50.0) / 100.0);
}
